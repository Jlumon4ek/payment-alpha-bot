
services:
  postgre:
    container_name: postgre
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - ./app/.env
    networks:
      - payment-bot

  bot:
    container_name: bot
    build: 
      context: ./app
      dockerfile: dockerfiles/backend.dockerfile
    restart: always
    volumes:
      - ./app:/app
    networks:
      - payment-bot
    env_file:
      - ./app/.env
    depends_on:
      - rabbitmq
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - payment-bot
    command: ["redis-server", "--replicaof", "no", "one"]

  celery-worker:
    container_name: celery-worker
    build: 
      context: ./app
      dockerfile: dockerfiles/backend.dockerfile
    restart: always
    volumes:
      - ./app:/app
    networks:
      - payment-bot
    env_file:
      - ./app/.env
    command: celery -A src.main_celery worker --loglevel=INFO
    depends_on:
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  celery-beat:
    container_name: celery-beat
    build: 
      context: ./app
      dockerfile: dockerfiles/backend.dockerfile
    restart: always
    volumes:
      - ./app:/app
    networks:
      - payment-bot
    env_file:
      - ./app/.env
    command: celery -A src.main_celery beat --loglevel=INFO
    depends_on:
      - rabbitmq


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - payment-bot
    env_file:
      - ./app/.env


networks:
  payment-bot:
    driver: bridge
  
